name: Generate phar

on:
  push:
    branches: [ 'master', '2.x', '3.x' ]
  pull_request:
    branches: [ '*' ]
  release:
    types: [ 'created', 'published' ]

jobs:
  php-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      COMPOSER_NO_INTERACTION: 1

    strategy:
      matrix:
        php: [ '8.1' ]
        dependency-version: [ 'prefer-stable' ]

    name: Release phar

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: composer:v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.dependency-version }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.dependency-version }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Git submodules
        run: git submodule update --init

      - name: Ant
        run: ant package -D-phar:filename=./phpmd.phar && ./phpmd.phar --version

      - name: Sign phar
        if: github.repository == 'phpmd/phpmd' && github.event_name == 'release'
        env:
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          if [ "$SECRET_KEY" = "" ]
          then
            echo "Missing SECRET_KEY";
          else
            echo "Writing SECRET_KEY keys.asc";
          fi
          if [ "$PASSPHRASE" = "" ]
          then
            echo "Missing PASSPHRASE";
          else
            echo "Unlocking key using PASSPHRASE";
          fi
          echo "$SECRET_KEY" > keys.asc;
          echo "$PASSPHRASE" | gpg --batch --import keys.asc;
          sh -c "echo $PASSPHRASE | gpg --command-fd 0 --pinentry-mode loopback -u pgp@phpmd.org --batch --detach-sign --output phpmd.phar.asc phpmd.phar";

      - name: Archive generated phar
        uses: actions/upload-artifact@v3
        with:
          path: |
            phpmd.phar
            phpmd.phar.asc

      - name: Release phpmd.phar
        if: github.event_name == 'release'
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: |
            phpmd.phar
            phpmd.phar.asc
