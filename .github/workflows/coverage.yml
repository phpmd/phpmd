name: Coverage

on:
  push:
    branches:
      - 'master'
      - '2.x'
      - '3.x'
  pull_request_target:
    branches:
      - "*"

jobs:
  php-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      COMPOSER_NO_INTERACTION: 1

    strategy:
      matrix:
        php: [8.3]
        dependency-version: [prefer-stable]

    name: PHP ${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: xdebug

      - name: Cache library packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-coverage-${{ matrix.php }}-${{ hashFiles('composer.json') }}

      - name: Cache test packages
        id: composer-test-cache
        uses: actions/cache@v3
        with:
          path: src/test/vendor
          key: ${{ runner.os }}-coverage-test-${{ matrix.php }}-${{ hashFiles('src/test/composer.json') }}

      - name: Upgrade PHPUnit
        run: |
          composer require symfony/config:^6.4 --no-update --no-interaction --dev
          cd src/test && composer require phpunit/phpunit:^5.7.27 --no-update --no-interaction --dev

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer update --no-progress --prefer-stable --prefer-dist --no-progress --ignore-platform-req=php+

      - name: Install test dependencies
        if: steps.composer-test-cache.outputs.cache-hit != 'true'
        run: cd src/test && composer update --no-progress --prefer-dist --prefer-stable --ignore-platform-req=php+

      - name: Fix PHP compatibility
        run: php src/test/php/fix-php-compatibility.php

      - name: Execute Unit Tests
        run: src/test/vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - name: Archive code coverage results
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
